{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","memo","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","movies","map","imdbId","App","useState","query","setQuery","appliedQuery","setAppliedQuery","applyQuery","useCallback","debounce","visibleMovies","useMemo","moviesFromServer","filter","lowerCaseQuery","toLowerCase","lowerCaseTitle","lowerCaseDescription","includes","htmlFor","type","id","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"+RAOaA,EAAuBC,gBAAK,YAAgB,IAAbC,EAAY,EAAZA,MAExCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,8BChCGQ,EAAwBV,gBAAK,gBAAGW,EAAH,EAAGA,OAAH,OACxC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,gB,OCHfC,EAAUd,gBAAK,WAC1B,MAA0Be,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAaC,sBACjBC,mBAASH,EAAiB,KAC1B,IAGII,EAAgBC,mBACpB,kBAAMC,EAAiBC,QAAO,YAA6B,IAA1BrB,EAAyB,EAAzBA,MAAOD,EAAkB,EAAlBA,YAChCuB,EAAiBX,EAAMY,cACvBC,EAAiBxB,EAAMuB,cACvBE,EAAuB1B,EAAYwB,cAEzC,OAAOC,EAAeE,SAASJ,IAC1BG,EAAqBC,SAASJ,QACjC,CAACT,IAGP,OACE,sBAAKZ,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAf,SACE,wBAAO0B,QAAQ,eAAe1B,UAAU,QAAxC,yBAGE,qBAAKA,UAAU,UAAf,SACE,uBACE2B,KAAK,OACLC,GAAG,eACH5B,UAAU,QACV6B,YAAY,mBACZC,MAAOpB,EACPqB,SAAW,YAAiB,IAAdC,EAAa,EAAbA,OACZrB,EAASqB,EAAOF,OAChBhB,EAAWkB,EAAOF,mBAQ9B,cAAC,EAAD,CAAYzB,OAAQY,OAGtB,qBAAKjB,UAAU,UAAf,qCCpDNiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.454da1c6.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: FC<Props> = memo(({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import './MoviesList.scss';\nimport { FC, memo } from 'react';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: FC<Props> = memo(({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n));\n","import './App.scss';\nimport { debounce } from 'lodash';\nimport {\n  FC, useState, useMemo, useCallback, memo,\n} from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: FC = memo(() => {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 1000),\n    [],\n  );\n\n  const visibleMovies = useMemo(\n    () => moviesFromServer.filter(({ title, description }) => {\n      const lowerCaseQuery = query.toLowerCase();\n      const lowerCaseTitle = title.toLowerCase();\n      const lowerCaseDescription = description.toLowerCase();\n\n      return lowerCaseTitle.includes(lowerCaseQuery)\n        || lowerCaseDescription.includes(lowerCaseQuery);\n    }), [appliedQuery],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n\n              <div className=\"control\">\n                <input\n                  type=\"text\"\n                  id=\"search-query\"\n                  className=\"input\"\n                  placeholder=\"Type search word\"\n                  value={query}\n                  onChange={(({ target }) => {\n                    setQuery(target.value);\n                    applyQuery(target.value);\n                  })}\n                />\n              </div>\n            </label>\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}